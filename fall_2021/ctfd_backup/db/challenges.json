{"count":32,"results":[{"id":1,"name":"A Friend","description":"My friend has been acting a little weird lately. He sent me a weird message. Can you figure out what's up? ","max_attempts":0,"value":100,"category":"Forensics","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":2,"name":"lost flash drive","description":"I found a flash drive in the street... ","max_attempts":0,"value":100,"category":"Forensics","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":3,"name":"pdfcrypt","description":"Hmm.... this PDF file is encrypted. I can't open it... Can you? ","max_attempts":0,"value":100,"category":"Forensics","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":4,"name":"Ramp Cat","description":"Alright. We got a picture of ramp cat. But we can't find him. Find out where he lives for us please? ","max_attempts":0,"value":100,"category":"Forensics","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":5,"name":"unk","description":"What the world is this file??? ","max_attempts":0,"value":100,"category":"Forensics","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":8,"name":"Hyrule","description":"It\u2019s dangerous to go alone! Take this.\r\n\r\nWe\u2019ve intercepted a number of hashes that should allow us access into Hyrule Castle - can you crack the hashes and reveal the passwords? The fate of the Kingdom depends on you!\r\n\r\n1.  645effa4c742b4e8fd148691e136d7b0\r\n2.  04f13c2faf98183d69ed2f8d684e4a7e\r\n3.  c5802f4d812f22e74a538ffcb45d19c3\r\n4.  71e39c0197cb7c0273e298e3a817ee55\r\n5.  8804344fb919f5cde20b0c4b090b0d8f\r\n\r\n**Your submission should contain all plain-text passwords on a single line, separated by commas, and in the order they appear above. Example: igor17, foobar29, passw0rd,  L33712, c3po**","max_attempts":0,"value":100,"category":"Password Cracking","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":9,"name":"Nintendon't","description":"As of recent, our friends at Nintendo have become very lax on their password policy. We were able to obtain a list of potential passwords, but we just can\u2019t seem to put two and two together (hint hint, nudge nudge). Crack the hashes using the lists provided - the fate of emulation depends on you!\r\n\r\n1.  0a153ffd902973679c12f3838587a0d1\r\n2.  49c0f00a8057fcf16a996c3ed7760705\r\n3.  1df097e0ef6017f7d35b834363e51fe3\r\n4.  764002a314b1dd10ceab77cf9cd8ba02\r\n5.  82b1e0dc1354db9be15d4bff931ed30f\r\n\r\n**Your submission should contain all plain-text passwords on a single line, separated by commas, and in the order they appear above. Example: igor17, foobar29, passw0rd,  L33712, c3po**\r\n\r\n","max_attempts":0,"value":200,"category":"Password Cracking","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":10,"name":"Secret","description":"Provide the input that validates correctly against the following script:\r\n\r\n```\r\nimport sys\r\n \r\nif len(sys.argv) < 2:\r\n    print(\"No args!\\nUsage: python3 check.py <string>\")\r\n    sys.exit()\r\n \r\nelif len(sys.argv) > 2:\r\n    print(\"Supply one argument!\\nUsage: python3 check.py <string>\")\r\n    sys.exit()\r\n \r\nelse:\r\n    val = str(sys.argv[1])\r\n \r\n    secret = [75, 83, 85, 61, 68, 97, 66, 101,  115, 116]\r\n \r\n    count = 0\r\n    for i in val:\r\n \r\n        if ord(i) == secret[count]:\r\n            print(f'wowzer, char {i} is correct.')\r\n            count += 1\r\n            continue\r\n \r\n        else:\r\n            print(\"das not right\")\r\n            sys.exit()\r\n \r\nprint(f\"Wow, you made it! The correct answer is {val}\")\r\n```","max_attempts":0,"value":300,"category":"Python Programming","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":11,"name":"Scrambled","description":"Provide the input that validates correctly against the following script:\r\n\r\n**Your submission should contain the input on a single line, seperated by spaces, and excluding commas. Example: this is my answer**\r\n\r\n```\r\nimport sys\r\n \r\ndef scrambler(word):\r\n    eggs = list(word)\r\n \r\n    scrambledeggs = []\r\n    for i in range(len(eggs)):\r\n        scrambledeggs.append(int(ord(word[i % 4]) / 2))\r\n \r\n    return(scrambledeggs)\r\n \r\nif len(sys.argv) < 2:\r\n    print(\"Find the hidden message: \\\"4737473 920692 971597\\\"\")\r\n    print(\"No args!\\nUsage: python3 scrambler.py <comma,separated,list>\")\r\n    sys.exit()\r\n \r\nelif len(sys.argv) > 2:\r\n    print(\"Find the hidden message: \\\"4737473 920692 971597\\\"\")\r\n    print(\"Supply one argument!\\nUsage: python3 scrambler.py <comma,separated,list>\")\r\n    sys.exit()\r\n \r\nelse:\r\n    val = str(sys.argv[1]).split(\",\")\r\n \r\n    secret = ['4737473', '920692', '971597']\r\n \r\n    answer = []\r\n    for i in val:\r\n \r\n        temp = []\r\n        for c in scrambler(i):\r\n            temp.append(chr(c))\r\n        answer.append(\"\".join(temp))\r\n       \r\n    try:\r\n \r\n        for i in range(len(secret)):\r\n \r\n            if secret[i] == answer[i]:\r\n                continue\r\n            else:\r\n                print(\"That's a negative ghost rider.\")\r\n                sys.exit()\r\n \r\n        print(f\"You got it right! The answer is {val}\")\r\n        print(\"Submit your answer in this format ---> \", end=\"\")\r\n        for i in val:\r\n            print(i, end=\" \")\r\n \r\n    except:\r\n        print(\"That's not right...\")\r\n```","max_attempts":0,"value":400,"category":"Python Programming","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":12,"name":"Cryptography 1","description":"Decrypt the text from the attached document!","max_attempts":0,"value":100,"category":"Cryptography","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":13,"name":"Cryptography 2","description":"See if you can find out what the below text means!\r\n\r\n> ++++++++[>++++[>++>+++>+++>+<<<<-]>+>+>->>+[<]<-]>>.>---.+++++++..+++.>>.<-.<.+++.------.--------.>>+.>++.","max_attempts":0,"value":200,"category":"Cryptography","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":14,"name":"Cryptography 3","description":"See if you can decode the secret message in the file!","max_attempts":0,"value":300,"category":"Cryptography","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":15,"name":"Cryptography 4","description":"See if you can decrypt the hidden message in the attached file!","max_attempts":0,"value":400,"category":"Cryptography","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":16,"name":"Cryptography 5","description":"Given the string below, see if you can find the flag using the attached file:\r\n\r\n\u00d6\u00ca\u00cb\u00d5\u00cb\u00d5\u00cf\u00db\u00c8\u00c3\u00d8\u00c8\u00d1\u00d0\u00d6","max_attempts":0,"value":500,"category":"Cryptography","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":17,"name":"Steg 1","description":"See if you can find the message hidden in this file!","max_attempts":0,"value":100,"category":"Steg","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":18,"name":"Steg 2","description":"See whether you can find the hidden flag in the below file!","max_attempts":0,"value":200,"category":"Steg","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":19,"name":"Steg 3","description":"See if you can get the message hidden in the attached file!","max_attempts":0,"value":300,"category":"Steg","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":20,"name":"Steg 4","description":"See if you can get the message hidden in the font file here!","max_attempts":0,"value":400,"category":"Steg","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":21,"name":"Lazy","description":"Woops! Looks like the KSU admins are being lazy\u2026 \r\n\r\nWe were able to intercept the following hashes containing passwords for KSU service accounts. We cracked some of the hashes already, and the passwords seem to follow a similar convention - that is KSU_ + 3 digits (ex. KSU_555). Crack the hashes and reveal the passwords!  \r\n\r\nbaa172f6a89c86e779e8c1d3ac33ce70\r\ne81279a9bcfec671788875300e69681a\r\n2f6973458f8eeed2af02e5cb0c17c60b\r\n06d5c4f1c925c8600148fa751fe1a87b\r\n70b940661d491840de96cfd9bdbd627c\r\n\r\n**Your submission should contain all plain-text passwords on a single line, separated by commas, and in the order they appear above. Example: igor17, foobar29, passw0rd,  L33712, c3po**","max_attempts":0,"value":300,"category":"Password Cracking","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":22,"name":"World of Hashcraft","description":"[WoWProgress](https://www.wowprogress.com/) is a site which tracks the rankings of the top guilds in the world for the game World of Warcraft. \r\n\r\nThe following is an md5 hash of the name of one of the top 100 guilds in the world for the \"Sanctum of Domination\" tier. Crack the hash and submit the name of the guild as your answer!\r\n\r\n39d8b865c6ba1c6cfd354a2a1763c1ff\r\n\r\n**Note: Input is case sensitive - test with the name exactly as it appears on WoWProgress, spaces and all. You should not include the (r) after the guild name when testing.**\r\n\r\n","max_attempts":0,"value":400,"category":"Password Cracking","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":23,"name":"Boomerang","description":"Run the following script and submit the output as your answer.\r\n\r\n```\r\ndef keyverse(string):\r\n    key = string[::-1]\r\n    return key\r\n\r\nstring = \"dlosraey2584revosidlrowehtnieerttsedloeht\"\r\n \r\nprint(keyverse(string))\r\n```","max_attempts":0,"value":100,"category":"Python Programming","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":24,"name":"Chex","description":"Find the list of integers that validates correctly against the following script:\r\n\r\n```\r\nimport sys\r\n \r\nkey = [0xf, 0x2c, 0x5a, 0x2d, 0x5]\r\n \r\n# Replace the integers in this list with your answer\r\nanswer = [0, 0, 0, 0, 0]\r\n \r\nfor i in range(len(key)):\r\n    if str(key[i]) == str(answer[i]):\r\n        print(f\"[{i}] is correct\")\r\n    else:\r\n        print(\"Wrong\")\r\n        sys.exit()\r\n \r\nprint(f\"Nice work, the answer is {answer}.\")\r\n```\r\n\r\n**Submit you answer with all integers on a single line, seperated by commas and spaces. Example: 13, 99, 3, 22, 10**","max_attempts":0,"value":200,"category":"Python Programming","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":25,"name":"WEB 1","description":"What is the IPv4 address of the DNS server in this capture?","max_attempts":0,"value":100,"category":"Network Traffic Analysis","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":26,"name":"WEB 2","description":"What is the **full file name** (including version number and file extension) of the Linux package downloaded in this capture?","max_attempts":0,"value":200,"category":"Network Traffic Analysis","type":"standard","state":"visible","requirements":{"prerequisites":[25]},"connection_info":null},{"id":27,"name":"WEB 3","description":"What is the IPv4 address for the host serving the curl package (where was the package downloaded from)?","max_attempts":0,"value":300,"category":"Network Traffic Analysis","type":"standard","state":"visible","requirements":{"prerequisites":[25,26]},"connection_info":null},{"id":28,"name":"WEB 4","description":"What is the IPv4 address of the host that the flag was downloaded from?","max_attempts":0,"value":400,"category":"Network Traffic Analysis","type":"standard","state":"visible","requirements":{"prerequisites":[25,26,27]},"connection_info":null},{"id":29,"name":"WEB 5","description":"What is the flag?\r\n\r\n*The flag is in the format KSU-****-*****","max_attempts":0,"value":500,"category":"Network Traffic Analysis","type":"standard","state":"visible","requirements":{"prerequisites":[25,26,27,28]},"connection_info":null},{"id":30,"name":"#1","description":"How many requests received the HTTP status code that indicates that the requested resource was not found?","max_attempts":0,"value":100,"category":"Log Analysis","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":31,"name":"#3","description":"\tWhich IP address made 273 GET requests to the web server?","max_attempts":0,"value":300,"category":"Log Analysis","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":32,"name":"#2","description":"SIEM alerts indicate crawling activity from IP 144.76.95.39. What is the name of the crawler? What is this \u201cbot type\u201d listed as on the vendor's website? (separate answers with a comma)","max_attempts":0,"value":200,"category":"Log Analysis","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":34,"name":"#4","description":"A GET request was made by IP 189.71.37.115 at 07:05:46 PM on May, 20th, 2015 for a .png file. The filename contains the last name of a famous basketball player. What is the full name of the file?","max_attempts":0,"value":400,"category":"Log Analysis","type":"standard","state":"visible","requirements":null,"connection_info":null},{"id":35,"name":"#5","description":"What is the total size of the objects returned to client IP address 66.249.73.135? (in bytes)","max_attempts":0,"value":500,"category":"Log Analysis","type":"standard","state":"visible","requirements":null,"connection_info":null}],"meta":{}}